//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Torq.MVC.RolesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RolesService.IRoleService")]
    public interface IRoleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/CreateRole", ReplyAction="http://tempuri.org/IRoleService/CreateRoleResponse")]
        Torq.Models.Objects.Role CreateRole(Torq.Models.Objects.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/CreateRole", ReplyAction="http://tempuri.org/IRoleService/CreateRoleResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Role> CreateRoleAsync(Torq.Models.Objects.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleById", ReplyAction="http://tempuri.org/IRoleService/GetRoleByIdResponse")]
        Torq.Models.Objects.Role GetRoleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleById", ReplyAction="http://tempuri.org/IRoleService/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Role> GetRoleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoles", ReplyAction="http://tempuri.org/IRoleService/GetRolesResponse")]
        Torq.Models.Objects.Role[] GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoles", ReplyAction="http://tempuri.org/IRoleService/GetRolesResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Role[]> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/RemoveRole", ReplyAction="http://tempuri.org/IRoleService/RemoveRoleResponse")]
        void RemoveRole(Torq.Models.Objects.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/RemoveRole", ReplyAction="http://tempuri.org/IRoleService/RemoveRoleResponse")]
        System.Threading.Tasks.Task RemoveRoleAsync(Torq.Models.Objects.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRole", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleResponse")]
        Torq.Models.Objects.Role UpdateRole(Torq.Models.Objects.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRole", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Role> UpdateRoleAsync(Torq.Models.Objects.Role role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleServiceChannel : Torq.MVC.RolesService.IRoleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleServiceClient : System.ServiceModel.ClientBase<Torq.MVC.RolesService.IRoleService>, Torq.MVC.RolesService.IRoleService {
        
        public RoleServiceClient() {
        }
        
        public RoleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Torq.Models.Objects.Role CreateRole(Torq.Models.Objects.Role role) {
            return base.Channel.CreateRole(role);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Role> CreateRoleAsync(Torq.Models.Objects.Role role) {
            return base.Channel.CreateRoleAsync(role);
        }
        
        public Torq.Models.Objects.Role GetRoleById(int id) {
            return base.Channel.GetRoleById(id);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Role> GetRoleByIdAsync(int id) {
            return base.Channel.GetRoleByIdAsync(id);
        }
        
        public Torq.Models.Objects.Role[] GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Role[]> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public void RemoveRole(Torq.Models.Objects.Role role) {
            base.Channel.RemoveRole(role);
        }
        
        public System.Threading.Tasks.Task RemoveRoleAsync(Torq.Models.Objects.Role role) {
            return base.Channel.RemoveRoleAsync(role);
        }
        
        public Torq.Models.Objects.Role UpdateRole(Torq.Models.Objects.Role role) {
            return base.Channel.UpdateRole(role);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Role> UpdateRoleAsync(Torq.Models.Objects.Role role) {
            return base.Channel.UpdateRoleAsync(role);
        }
    }
}
