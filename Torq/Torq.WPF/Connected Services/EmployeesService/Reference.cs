//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Torq.WPF.EmployeesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeesService.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployees", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeesResponse")]
        Torq.Models.Objects.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployees", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Employee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIdResponse")]
        Torq.Models.Objects.Employee GetEmployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIdResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Employee> GetEmployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeByUserName", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByUserNameResponse")]
        Torq.Models.Objects.Employee GetEmployeeByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeByUserName", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByUserNameResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Employee> GetEmployeeByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        Torq.Models.Objects.Employee UpdateEmployee(Torq.Models.Objects.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Employee> UpdateEmployeeAsync(Torq.Models.Objects.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        void RemoveEmployee(Torq.Models.Objects.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        System.Threading.Tasks.Task RemoveEmployeeAsync(Torq.Models.Objects.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/CreateEmployeeResponse")]
        Torq.Models.Objects.Employee CreateEmployee(Torq.Models.Objects.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<Torq.Models.Objects.Employee> CreateEmployeeAsync(Torq.Models.Objects.Employee employee);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : Torq.WPF.EmployeesService.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<Torq.WPF.EmployeesService.IEmployeeService>, Torq.WPF.EmployeesService.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Torq.Models.Objects.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public Torq.Models.Objects.Employee GetEmployeeById(int id) {
            return base.Channel.GetEmployeeById(id);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Employee> GetEmployeeByIdAsync(int id) {
            return base.Channel.GetEmployeeByIdAsync(id);
        }
        
        public Torq.Models.Objects.Employee GetEmployeeByUserName(string userName) {
            return base.Channel.GetEmployeeByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Employee> GetEmployeeByUserNameAsync(string userName) {
            return base.Channel.GetEmployeeByUserNameAsync(userName);
        }
        
        public Torq.Models.Objects.Employee UpdateEmployee(Torq.Models.Objects.Employee employee) {
            return base.Channel.UpdateEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Employee> UpdateEmployeeAsync(Torq.Models.Objects.Employee employee) {
            return base.Channel.UpdateEmployeeAsync(employee);
        }
        
        public void RemoveEmployee(Torq.Models.Objects.Employee employee) {
            base.Channel.RemoveEmployee(employee);
        }
        
        public System.Threading.Tasks.Task RemoveEmployeeAsync(Torq.Models.Objects.Employee employee) {
            return base.Channel.RemoveEmployeeAsync(employee);
        }
        
        public Torq.Models.Objects.Employee CreateEmployee(Torq.Models.Objects.Employee employee) {
            return base.Channel.CreateEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<Torq.Models.Objects.Employee> CreateEmployeeAsync(Torq.Models.Objects.Employee employee) {
            return base.Channel.CreateEmployeeAsync(employee);
        }
    }
}
